[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alfredo Marquez. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marquez (2022). holiday.dates: Package (One Line, Title Case). R package version 0.0.9.","code":"@Manual{,   title = {holiday.dates: What the Package Does (One Line, Title Case)},   author = {Alfredo Marquez},   year = {2022},   note = {R package version 0.0.9}, }"},{"path":"/index.html","id":"holidaydates","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal holiday.dates create data frame holiday dates flagged dataframe. user options output data frame either days weeks 2 days. column dates can also passed function, use first last dates build holiday data frame.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version holiday.dates like :","code":"library(remotes) remotes::install_github(\"Fredo-XVII/holiday.dates\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"example holidays associated days. Notice output get calendar date well week begin date week end date. example see output out_df = \"week\". aggregation days dataframe week level. can see first row relates first 7 rows data frame . NOTE: days/weels holiday value holiday name field NoHoliday.","code":"library(holiday.dates)  days_df <- tibble::tibble(weeks = seq.Date(as.Date('2015-01-01'), as.Date('2020-01-01'), by = 'day'))  holiday_data(df = days_df, out_df = \"days\") %>% head(10) #> Joining, by = c(\"greg_d\", \"day_n\", \"wk_beg_d\", \"wk_end_d\") #> Adding missing grouping variables: `wk_end_d` #> Joining, by = c(\"wk_beg_d\", \"wk_end_d\") #> # A tibble: 10 x 6 #>    calendar_d day_n fiscal_week_beg~ fiscal_week_end~ holiday_names holiday_flag #>    <date>     <ord> <date>           <date>           <chr>                <dbl> #>  1 2015-01-01 Thu   2014-12-28       2015-01-03       NewYearsDay              1 #>  2 2015-01-02 Fri   2014-12-28       2015-01-03       NoHoliday                0 #>  3 2015-01-03 Sat   2014-12-28       2015-01-03       NoHoliday                0 #>  4 2015-01-04 Sun   2015-01-04       2015-01-10       NoHoliday                0 #>  5 2015-01-05 Mon   2015-01-04       2015-01-10       NoHoliday                0 #>  6 2015-01-06 Tue   2015-01-04       2015-01-10       NoHoliday                0 #>  7 2015-01-07 Wed   2015-01-04       2015-01-10       NoHoliday                0 #>  8 2015-01-08 Thu   2015-01-04       2015-01-10       NoHoliday                0 #>  9 2015-01-09 Fri   2015-01-04       2015-01-10       NoHoliday                0 #> 10 2015-01-10 Sat   2015-01-04       2015-01-10       NoHoliday                0 library(holiday.dates)  weeks_df <- tibble::tibble(weeks = seq.Date(as.Date('2015-01-01'), as.Date('2020-01-01'), by = 'week'))  holiday_data(df = weeks_df, out_df = \"week\") %>% head(10) #> Joining, by = c(\"greg_d\", \"day_n\", \"wk_beg_d\", \"wk_end_d\") #> Adding missing grouping variables: `wk_end_d` #> Joining, by = c(\"wk_beg_d\", \"wk_end_d\") #> # A tibble: 10 x 4 #> # Groups:   fiscal_week_begin_d [10] #>    fiscal_week_begin_d fiscal_week_end_d holiday_names holiday_flag #>    <date>              <date>            <chr>                <dbl> #>  1 2014-12-28          2015-01-03        NewYearsDay              1 #>  2 2015-01-04          2015-01-10        NoHoliday                0 #>  3 2015-01-11          2015-01-17        NoHoliday                0 #>  4 2015-01-18          2015-01-24        MlkDay                   1 #>  5 2015-01-25          2015-01-31        NoHoliday                0 #>  6 2015-02-01          2015-02-07        SuperBowl                1 #>  7 2015-02-08          2015-02-14        ValentinesDay            1 #>  8 2015-02-15          2015-02-21        NoHoliday                0 #>  9 2015-02-22          2015-02-28        NoHoliday                0 #> 10 2015-03-01          2015-03-07        NoHoliday                0"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Alfredo Marquez Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/add_holidays.html","id":null,"dir":"Reference","previous_headings":"","what":"Added Holidays — add_holidays","title":"Added Holidays — add_holidays","text":"functions add holiday dates found timeDate package.  either new federal holidays, retail holidays covered timeDate package.","code":""},{"path":"/reference/add_holidays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Added Holidays — add_holidays","text":"","code":"USValentinesDay(year = timeDate::getRmetricsOptions(\"currentYear\"))  USSuperBowl(year = timeDate::getRmetricsOptions(\"currentYear\"))  USSaintPatricksDay(year = timeDate::getRmetricsOptions(\"currentYear\"))  USMothersDay(year = timeDate::getRmetricsOptions(\"currentYear\"))  USFathersDay(year = timeDate::getRmetricsOptions(\"currentYear\"))  USHalloweenDay(year = timeDate::getRmetricsOptions(\"currentYear\"))  USCyberMonday(year)  USJuneteenthDay(year = timeDate::getRmetricsOptions(\"currentYear\"))  Holiday_Names(name, holiday_dates)"},{"path":"/reference/add_holidays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Added Holidays — add_holidays","text":"year numeric vector year integers. name character Name holiday represented holiday_dates vector. holiday_dates Dates vector dates representing holiday.","code":""},{"path":"/reference/add_holidays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Added Holidays — add_holidays","text":"functions return dates holiday specified name function. example, USValentinesDay() provide dates valentines day US passed vector years.","code":""},{"path":"/reference/add_holidays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Added Holidays — add_holidays","text":"","code":"{ # Individual Holidays library(holiday.dates) years <- seq(2015,2020, by = 1) US_ValentinesDay <- USValentinesDay(years) %>% as.Date() Name_Valentines <- Holiday_Names(\"ValentinesDay\",US_ValentinesDay) }"},{"path":"/reference/holiday_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Holiday Data — holiday_data","title":"Holiday Data — holiday_data","text":"Builds dataframe holiday dates 2 dates form 'yyyy-mm-dd'.  Pass dataframe column dates.","code":""},{"path":"/reference/holiday_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Holiday Data — holiday_data","text":"","code":"holiday_data(df, out_df = c(\"weeks\", \"days\"))"},{"path":"/reference/holiday_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Holiday Data — holiday_data","text":"df dataframe dataframe 1 date column least 2 dates. out_df character weeks default, can also use days.","code":""},{"path":"/reference/holiday_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Holiday Data — holiday_data","text":"result function can either dataframe days minimum maximum dates provided, , default option return dataframe weeks instead days. paramater out_df gives user 2 choices output.  default output weeks dataframe beginning week, ending week, holiday flag, column holiday name.  second option returns dataframe days day names 4 columns mention .","code":""},{"path":"/reference/holiday_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Holiday Data — holiday_data","text":"https://github.com/cran/timeDate/blob/master/R/holiday-Dates.R https://www.federalpay.org/holidays","code":""},{"path":"/reference/holiday_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Holiday Data — holiday_data","text":"","code":"if (FALSE) { # Holiday dates in a dataframe library(holiday.dates) weeks_df <- tibble::tibble(weeks = seq.Date(as.Date('2015-01-01'), as.Date('2020-01-01'), by = 'week')) holidays_weeks(df = weeks_df) %>% head(10) }"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/news/index.html","id":"holidaydates-0009000","dir":"Changelog","previous_headings":"","what":"holiday.dates 0.0.0.9000","title":"holiday.dates 0.0.0.9000","text":"Added NEWS.md file track changes package. Added README.md file home page pkgdown. Added pkgdown website.","code":""}]
